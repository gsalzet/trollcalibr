% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setupDesign.R
\name{setupDesign}
\alias{setupDesign}
\title{Design of experiments for TROLL simulations}
\usage{
setupDesign(
  name = NULL,
  paramsBounds,
  forestInit = NULL,
  ntotalsim,
  ninitsim = NULL,
  sequential = FALSE,
  path = NULL,
  nreplica = 10,
  corrmat = NULL,
  echo = FALSE,
  maxit = NULL,
  dimPlot = list(xdim = 250L, ydim = 250L)
)
}
\arguments{
\item{name}{chr. Name of design and key for simulation.
If not provided, a ULID key is generated (see \code{ulid::\link[ulid:generate]{generate}} for details).}

\item{paramsBounds}{d.f. a formatted data.frame (see details) to
describe parameters space.}

\item{forestInit}{d.f. a troll forest format data.frame indexed
with a unique 'simulation' column.}

\item{ntotalsim}{int. Total number of simulations per forest point.}

\item{ninitsim}{int. Initial number of simulations if
sequential design is selected.}

\item{sequential}{bool. Selection of a sequential design
based on gaussian processes emulation per forest point.}

\item{path}{char. Path to save the simulation outputs,
the default is null corresponding to a simulation in memory without saved intermediary files.}

\item{nreplica}{int. Number of replica per sampling point (default: 10).}

\item{corrmat}{mat. Pearson correlation matrix between studied parameters.
If not provided, uncorrelated matrix will be used.}

\item{echo}{bool. display information messages (default = TRUE).}

\item{maxit}{Maximum number of iterations to compute correlation.
Set to 0 to use a heuristic based on the size of the hypercube.
Set to a negative number to never give up. \emph{CAUTION}, this might result in an infinite loop.}

\item{dimPlot}{list. Plot dimension with a list of xdim and ydim (in m).
If forestInit is provided, 'dimPlot' must be a named list of list of xdim and ydim.}
}
\value{
a trolldae object.
}
\description{
Function to generate optimised design of experiments (DOE).
User have to provide a formatted data.frame to define the DOE dimensions
and unscale conversion to texted parameters.
}
\details{
'paramsBounds' data.frame is formatted as followed:
\itemize{
\item parameter: chr. Name of the parameter within TROLL settings,
covariate table or experiment setup ;
\item quantileFn: fct. Quantile function to scale margin
distribution of studied parameter ;
\item type: chr. Type of parameter ('global'/ 'species'/
'climate'/ 'daily'/ 'covariate/ 'experiment').
}

'forestInit' data.frame is formatted as followed:
\itemize{
\item simulation: chr. Unique identifier for each studied plot
(common between tree within plot) ;
\item col: int. y-axis of tree location ;
\item row: int. x-axis of tree location
\item s_name: chr. tree specie name ;
\item CrownDisplacement: 	int. allowed crown plasticity (set to 0) ;
\item Pmass: P mass in leaf (in g.m-2) ;
\item Nmass: N mass in leaf (in g.m-2) ;
\item LMA: Leaf Mass Area (in g.m-2) ;
\item wsg: Wood Specific Gravity (in kg.m-3);
\item dbhmax: Maximum diameter at breast height (in m) ;
\item dbh:	 Current diameter at breast height (in m) ;
\item height:	Current tree height (in m) ;
\item CD: Crown depth (in m) ;
\item CR: Crown radius (in m).
}
}
\examples{

  require(tibble)
  require(dplyr)
  
 paramsBounds <- tibble(parameter = c("klight","phi","g1","nbs0","CR_a","CR_b","Hmaxcor","habitat"),
  quantileFn = c(\(x) {qunif(x,0.5,0.95)}, # klight
   \(x) {qunif(x,0.04,0.09)}, # phi
   \(x) {qunif(x,2,5)}, # g1
   \(x) {ceiling(10^qunif(x,0,3))}, # log10nbs0
   \(x) {qunif(x,1.5,3)}, # CR_a
   \(x) {qunif(x,0.4,0.8)}, # CR_b
   \(x) {qunif(x,0.8,1.2)},# Hmaxcor
   \(x) {ceiling(qunif(x,0,14))}), #Habitat 
   type = c("global","global","global","global","global","global","species", "covariate"))
   
ForestTest <- TROLLv3_sim@forest
ForestInitTRUE <- rbind(ForestTest \%>\% mutate(simulation = "test"),
ForestTest \%>\% mutate(simulation = "test1"))

setupDesign(paramsBounds = paramsBounds,ntotalsim = 10,echo = FALSE,forestInit = ForestInitTRUE,
dimPlot = list("test" = list("xdim" = 100,"ydim" = 100),
"test1" = list("xdim" = 100,"ydim" = 100)))

}
