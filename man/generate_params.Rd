% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generateParam.R
\name{generate_params}
\alias{generate_params}
\alias{generate_params,trolldae-method}
\title{Function to generate settings parameters for TROLL simulator
from a trollDAE object.}
\usage{
generate_params(
  obj,
  nyearsInit,
  fnGlobal = NULL,
  fnClimate = NULL,
  climateInit = NULL,
  fnDaily = NULL,
  dailyInit = NULL,
  fnSpecies = NULL,
  speciesInit = NULL,
  fnLidar = NULL,
  covariates = NULL,
  echo = FALSE,
  minID = NULL,
  ...
)

\S4method{generate_params}{trolldae}(
  obj,
  nyearsInit,
  fnGlobal = NULL,
  fnClimate = NULL,
  climateInit = NULL,
  fnDaily = NULL,
  dailyInit = NULL,
  fnSpecies = NULL,
  speciesInit = NULL,
  fnLidar = NULL,
  covariates = NULL,
  echo = FALSE,
  minID = NULL,
  ...
)
}
\arguments{
\item{obj}{trolldae.}

\item{nyearsInit}{int. Minimal number of years for initialization.}

\item{fnGlobal}{fct. Custom function to compute global TROLL settings.
if not provided, quantiles functions in boundaries will be used.}

\item{fnClimate}{fct. Custom function to compute climate TROLL settings.
if not provided, quantiles functions in boundaries will be used to modify \emph{mean value}.}

\item{climateInit}{d.f. Reference climate data to use in simulation.}

\item{fnDaily}{fct. Custom function to compute daily variations TROLL settings.
if not provided, quantiles functions in boundaries will be used to modify \emph{amplitude by multiplying} values.}

\item{dailyInit}{d.f. Reference daily variations data to use in simulation.}

\item{fnSpecies}{fct. Custom function to compute species TROLL settings.
if not provided, quantiles functions in boundaries will be used to modify \emph{mean value}.}

\item{speciesInit}{d.f.Reference species data to use in simulation.}

\item{fnLidar}{fct. Custom function to compute lidar TROLL settings.
if not provided, \emph{no lidar} simulation performed.}

\item{covariates}{d.f. Covariates used in custom functions to
compute TROLL settings.}

\item{echo}{bool. display information messages (default = TRUE).}

\item{minID}{int. Minimal simulation index.}

\item{...}{Unused parameters.}
}
\value{
an initialized trolldae object
}
\description{
Function to generate settings parameters for TROLL simulator
from a trollDAE object.
}
\examples{
require(tibble)
require(dplyr)
paramsBounds <- tibble(parameter = c("klight","phi","g1",
"nbs0","CR_a","CR_b","Hmaxcor","habitat"),
  quantileFn = c(\(x) {qunif(x,0.5,0.95)}, # klight
   \(x) {qunif(x,0.04,0.09)}, # phi
   \(x) {qunif(x,2,5)}, # g1
   \(x) {ceiling(10^qunif(x,0,3))}, # log10nbs0
   \(x) {qunif(x,1.5,3)}, # CR_a
   \(x) {qunif(x,0.4,0.8)}, # CR_b
   \(x) {qunif(x,0.8,1.2)},# Hmaxcor
   \(x) {ceiling(qunif(x,0,14))}), #Habitat 
   type = c("global","global","global","global",
   "global","global","species", "covariate"))
   
fnSpecies <- \(x,species,...) {
   species_data <- species \%>\%
   mutate(simulation = paste0(x$IDsim)) \%>\%
   mutate(s_hmax = s_hmax * x$Hmaxcor) \%>\% 
   mutate(s_regionalfreq  = (sin(row_number() * 
   x$habitat/14) + 1)/sum(sin(1:45 * x$habitat/14) + 1))
   return(species_data)
   }

trollDAETest <- setupDesign(paramsBounds = paramsBounds,
ntotalsim = 10,echo = FALSE)

generate_params(obj = trollDAETest,nyearsInit = 600)

}
