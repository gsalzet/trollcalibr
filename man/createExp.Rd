% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createExp.R
\name{createExp}
\alias{createExp}
\title{Create individual experiment to process on TROLL simulations}
\usage{
createExp(
  id,
  type = c("Inter", "Summary", "Init"),
  fnExp = NULL,
  deltaT = NULL,
  parameters = NULL,
  inputs = NULL
)
}
\arguments{
\item{id}{int.Index of experience}

\item{type}{char. Type of exp√©rience ("Init","Inter","Summary").}

\item{fnExp}{fct. Experiments function to be apply
on trollsim (see details).}

\item{deltaT}{int. Number of year to process after experiment.}

\item{parameters}{d.f. Inputs parameters from trollDAE to use within
fnExp function.}

\item{inputs}{list. Other inputs commons between experiments.}
}
\value{
a trollexpsingle object
}
\description{
Create individual experiment to process on TROLL simulations
}
\details{
'createExp' function is a formatted experiment to
be apply on simulation.
Only discrete time experiments are supported.
They are indexed with 'id' argument.
Outputs can trasmitted to the next experiments as a
list of output.
3 types of experiments are avialables:
\itemize{
\item 'init': Initialisation of the simulation
(automatically generated) ;
\item 'inter': User defined experiments to be apply
sequentially on simulations ;
\item "Summary': User defined summary function to be
apply on final trollsim.
}
}
\examples{

suppressWarnings(suppressMessages(library(dplyr)))

fnExpSum <- function(x,...){
   summary <- matrix(c("DBH" = mean(x@forest$dbh),
   "LAI" = mean(x@forest$LAI)),nrow = 1,byrow = TRUE)
   return(summary)
   }
   
fnExpFrac <- function(x,parameters,...){
   x@forest <-  x@forest \%>\% sample_frac(parameters$fraction) 
   return(list(x,matrix()))
   }  
   
Exp1 <- createExp(id = 1, 
 type = "Inter",
 deltaT = 100,
 fnExp = fnExpFrac,
 parameters = data.frame("fraction" = 0.5),
 inputs = list())
  
   
Exp2 <- createExp(id = 2, 
 type = "Summary", 
 fnExp = fnExpSum,
 parameters = data.frame(),
 inputs = list())

}
